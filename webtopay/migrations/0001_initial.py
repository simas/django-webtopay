# Generated by Django 3.0.2 on 2020-01-22 10:34

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='WebToPayResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField(blank=True)),
                ('ipaddress', models.GenericIPAddressField(blank=True, null=True)),
                ('flag', models.BooleanField(blank=True, default=False)),
                ('flag_info', models.TextField(blank=True)),
                ('projectid', models.BigIntegerField(help_text='Unikalus projekto numeris. Tik patvirtinti projektai gali priimti įmokas', null=True)),
                ('orderid', models.CharField(help_text='Užsakymo numeris iš jūsų sistemos', max_length=40)),
                ('lang', models.CharField(blank=True, help_text='Galima nurodyti naudotojo kalbą, jeigu tokios kalbos mokėjimai.lt nepalaiko bus parinkta kalba pagal lankytojo IP adresą arba anglų kalba pagal nutylėjimą. (LIT, LAV, EST, RUS, ENG, GER, POL)', max_length=3)),
                ('amount', models.BigIntegerField(help_text='Suma centais, kurią klientas turi apmokėti', null=True)),
                ('currency', models.CharField(help_text='Mokėjimo valiuta (LTL, USD, EUR), kuria pageidaujate, kad klientas mokėtų. Jeigu nurodyta valiuta per pasirinktą mokėjimo būdą negali būti priimta, sistema automatiškai pagal dienos kursą konvertuos į palaikomą valiutą. Atsakyme į Jūsų svetainę bus paduoti payamount ir paycurrency', max_length=3)),
                ('payment', models.CharField(help_text='Mokėjimo būdas. Parametras, kuriame nieko nenurodoma (paliekamas tuščias). Naudotojui bus pateikta lentelė su mokėjimo būdų sąrašu, pasirinkimui. Jis naudojamas tik tuo atveju, jeigu norima, kad mokėjimas būtų atliktas tik per konkretų mokėjimo būdą', max_length=20)),
                ('country', models.CharField(help_text='Mokėtojo šalis (LT, EE, LV, GB, PL, DE). Nurodžius šalį, mokėtojui iš karto pateikiami mokėjimo būdai, galimi toje šalyje. Jeigu šalis nenurodoma, sistema pagal mokėtojo IP adresą nustato jo šalį. Mokėtojui paliekama galimybė pasikeisti šalį', max_length=2)),
                ('paytext', models.TextField(help_text='Mokėjimo paskirtis, kuri matosi darant pavedimą.')),
                ('_ss2', models.CharField(blank=True, help_text='Parametras, kurio pagalba yra tikrinama, ar iš mūsų serverio gavote atsakymą. Tai aukščiausio patikimumo lygio tikrinimo būdas. Atsisiųskite skripto pavyzdį', max_length=255)),
                ('_ss1', models.CharField(blank=True, help_text='Parametras, kurio pagalba yra tikrinama, ar iš mūsų serverio gavote atsakymą. Tai -- žemesnio nei _ss2 patikimumo lygio tikrinimo būdas. Atsisiųskite pavyzdį', max_length=64)),
                ('name', models.CharField(blank=True, help_text='Mokėtojo vardas, gautas iš mokėjimo sistemos. Siunčiamas tik jeigu mokėjimo sistema tokį suteikia', max_length=255)),
                ('surename', models.CharField(blank=True, help_text='Mokėtojo pavardė, gauta iš mokėjimo sistemos. Siunčiamas tik jeigu mokėjimo sistema tokį suteikia', max_length=255)),
                ('status', models.IntegerField(choices=[(0, 'payment did not succeed'), (1, 'payment succeeded'), (2, 'payment accepted, but not yet processed'), (3, 'additional payment information')], default=0, help_text='Mokėjimo būklė: 0 - apmokėjimas neįvyko, 1 - apmokėta sėkmingai, 2 - mokėjimo nurodymas priimtas, bet dar neįvykdytas3 - papildoma mokėjimo informacija')),
                ('error', models.CharField(blank=True, help_text='Klaidos kodas', max_length=20)),
                ('test', models.SmallIntegerField(choices=[(0, 'Production'), (1, 'Test')], help_text='Parametras, kuriam esant galima testuoti sujungimą, tokiu būdu apmokėjimas nevykdomas ir rezultatas grąžinamas iš karto, tartum būtų sumokėta. Norint testuoti, būtina aktyvuoti testavimo režimą prie konkretaus projekto, kai prisijungiate: "Paslaugų valdymas" -> "įmokų surinkimas" (prie konkretaus projekto) -> "Leisti testinius mokėjimus" (pažymėkite)', null=True)),
                ('p_email', models.TextField(help_text='Pirkėjo el. paštas privalomas. Jeigu adresas nebus gautas, kliento bus prašoma jį įvesti. Šiuo adresu mokėjimai.lt sistema informuos mokėtoją apie apmokėjimo būklę')),
                ('requestid', models.CharField(blank=True, help_text='Tai užklausos numeris, kurį gauname, kai žmogus nuspaudžia ant banko ir kurį pateikiame į "callbackurl" laukelyje nurodytą nuorodą', max_length=40)),
                ('payamount', models.IntegerField(help_text='Suma centais, kurią pervedė. Gali skirtis jeigu buvokonvertuota į kitą valiutą', null=True)),
                ('paycurrency', models.CharField(help_text='Mokėjimo valiuta (LTL, USD, EUR), kurią pervedė. Gali skirtis nuo tos kurios prašėte, jeigu pasirinktas mokėjimo būdas negalėjo priimti prašomos valiutos', max_length=10)),
                ('version', models.CharField(help_text='Mokėjimai.lt mokėjimų sistemos specifikacijos (API) versijos numeris', max_length=9)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
